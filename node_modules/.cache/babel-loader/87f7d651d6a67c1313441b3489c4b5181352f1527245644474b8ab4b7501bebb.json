{"ast":null,"code":"var _jsxFileName = \"/Users/antoinelevy/Documents/Code/portfolio_react/portfolio/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Chatbot from 'react-chatbot-kit';\nimport { createChatBotMessage } from 'react-chatbot-kit';\nimport 'react-chatbot-kit/build/main.css';\n\n// Configuration for the chatbot\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  botName: \"MyBot\",\n  initialMessages: [createChatBotMessage(\"Hey, how can I help you today?\")],\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: '#f0f0f0'\n    },\n    chatButton: {\n      backgroundColor: '#5ccc9d'\n    }\n  },\n  customComponents: {\n    botAvatar: props => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./bitmoji.png\",\n      alt: \"Custom Bot Avatar\",\n      style: {\n        width: '40px',\n        height: '40px',\n        borderRadius: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }\n};\n\n// MessageParser class\nclass MessageParser {\n  constructor(actionProvider) {\n    this.actionProvider = actionProvider;\n  }\n  parse(message) {\n    const lowerCaseMessage = message.toLowerCase();\n    if (lowerCaseMessage.includes(\"hello\")) {\n      this.actionProvider.greet();\n    }\n    if (lowerCaseMessage.includes(\"help\")) {\n      this.actionProvider.handleHelp();\n    }\n  }\n}\n\n// ActionProvider class\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n  greet() {\n    const message = this.createChatBotMessage(\"Hello! How can I assist you today?\");\n    this.updateChatbotState(message);\n  }\n  handleHelp() {\n    const message = this.createChatBotMessage(\"Sure, I'm here to help! What do you need assistance with?\");\n    this.updateChatbotState(message);\n  }\n  updateChatbotState(message) {\n    this.setState(prevState => ({\n      ...prevState,\n      messages: [...prevState.messages, message]\n    }));\n  }\n}\n\n// Main Chatbot component\nconst MyChatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleChatbot = () => {\n    setIsOpen(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    style: {\n      position: 'fixed',\n      bottom: '20px',\n      right: '20px',\n      zIndex: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleChatbot,\n      style: {\n        background: 'none',\n        border: 'none',\n        cursor: 'pointer'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./bitmoji.png\",\n        alt: \"Open Chatbot\",\n        style: {\n          width: '50px',\n          height: '50px',\n          borderRadius: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Chatbot, {\n        config: config,\n        messageParser: MessageParser,\n        actionProvider: ActionProvider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChatbot, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = MyChatbot;\nexport default MyChatbot;\nvar _c;\n$RefreshReg$(_c, \"MyChatbot\");","map":{"version":3,"names":["React","useState","Chatbot","createChatBotMessage","jsxDEV","_jsxDEV","config","botName","initialMessages","customStyles","botMessageBox","backgroundColor","chatButton","customComponents","botAvatar","props","src","alt","style","width","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","MessageParser","constructor","actionProvider","parse","message","lowerCaseMessage","toLowerCase","includes","greet","handleHelp","ActionProvider","setStateFunc","setState","updateChatbotState","prevState","messages","MyChatbot","_s","isOpen","setIsOpen","toggleChatbot","prev","className","position","bottom","right","zIndex","children","onClick","background","border","cursor","marginTop","messageParser","_c","$RefreshReg$"],"sources":["/Users/antoinelevy/Documents/Code/portfolio_react/portfolio/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Chatbot from 'react-chatbot-kit';\nimport { createChatBotMessage } from 'react-chatbot-kit';\nimport 'react-chatbot-kit/build/main.css';\n\n// Configuration for the chatbot\nconst config = {\n  botName: \"MyBot\",\n  initialMessages: [createChatBotMessage(\"Hey, how can I help you today?\")],\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: '#f0f0f0',\n    },\n    chatButton: {\n      backgroundColor: '#5ccc9d',\n    },\n  },\n  customComponents: {\n    botAvatar: (props) => (\n      <img \n        src=\"./bitmoji.png\" \n        alt=\"Custom Bot Avatar\" \n        style={{ \n          width: '40px', \n          height: '40px', \n          borderRadius: '50%' \n        }} \n      />\n    ),\n  },\n};\n\n// MessageParser class\nclass MessageParser {\n  constructor(actionProvider) {\n    this.actionProvider = actionProvider;\n  }\n\n  parse(message) {\n    const lowerCaseMessage = message.toLowerCase();\n\n    if (lowerCaseMessage.includes(\"hello\")) {\n      this.actionProvider.greet();\n    }\n\n    if (lowerCaseMessage.includes(\"help\")) {\n      this.actionProvider.handleHelp();\n    }\n  }\n}\n\n// ActionProvider class\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n\n  greet() {\n    const message = this.createChatBotMessage(\"Hello! How can I assist you today?\");\n    this.updateChatbotState(message);\n  }\n\n  handleHelp() {\n    const message = this.createChatBotMessage(\"Sure, I'm here to help! What do you need assistance with?\");\n    this.updateChatbotState(message);\n  }\n\n  updateChatbotState(message) {\n    this.setState((prevState) => ({\n      ...prevState,\n      messages: [...prevState.messages, message],\n    }));\n  }\n}\n\n// Main Chatbot component\nconst MyChatbot = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleChatbot = () => {\n    setIsOpen((prev) => !prev);\n  };\n\n  return (\n    <div className=\"chatbot-container\" style={{ position: 'fixed', bottom: '20px', right: '20px', zIndex: 1000 }}>\n      <button onClick={toggleChatbot} style={{ background: 'none', border: 'none', cursor: 'pointer' }}>\n        <img \n          src=\"./bitmoji.png\" \n          alt=\"Open Chatbot\" \n          style={{ width: '50px', height: '50px', borderRadius: '50%' }}\n        />\n      </button>\n      {isOpen && (\n        <div style={{ marginTop: '10px' }}>\n          <Chatbot\n            config={config}\n            messageParser={MessageParser}\n            actionProvider={ActionProvider}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyChatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}